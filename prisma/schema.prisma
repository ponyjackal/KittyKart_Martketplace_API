// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Collection {
  id         Int       @id @default(autoincrement())
  address    String    @unique
  name       String
  symbol     String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  karts      Kart[]
  assets     Asset[]
  listings   Listing[]
}

model Kart {
  id                 Int         @id @default(autoincrement())
  token_id           Int         @unique
  name               String
  description        String
  owner_address      String
  collection_address String
  image              String
  external_url       String
  animation_url      String
  background_color   String
  minted_at          DateTime
  created_at         DateTime    @default(now())
  updated_at         DateTime    @updatedAt
  owner              Account     @relation(fields: [owner_address], references: [address])
  collection         Collection  @relation(fields: [collection_address], references: [address])
  attributes         Attribute[]
}

model Asset {
  id                 Int         @id @default(autoincrement())
  token_id           Int         @unique
  name               String
  description        String
  owner_address      String
  collection_address String
  image              String
  external_url       String
  animation_url      String?
  background_color   String?
  minted_at          DateTime
  created_at         DateTime    @default(now())
  updated_at         DateTime    @updatedAt
  owner              Account     @relation(fields: [owner_address], references: [address])
  collection         Collection  @relation(fields: [collection_address], references: [address])
  attributes         Attribute[]
}

enum ATTRIBUTE_USE_STATUS {
  NOT_APPLIED
  CURRENTLY_APPLIED
  EXPIRED
}

model Attribute {
  id         Int                  @id @default(autoincrement())
  asset_id   Int
  kart_id    Int?
  trait_type String
  value      String
  in_use     ATTRIBUTE_USE_STATUS @default(NOT_APPLIED)
  created_at DateTime             @default(now())
  updated_at DateTime             @updatedAt
  asset      Asset                @relation(fields: [asset_id], references: [token_id])
  kart       Kart?                @relation(fields: [kart_id], references: [token_id])
}

enum LISTING_STATUS {
  ACTIVE
  SOLD
  CANCELED
}

model Listing {
  id                 Int            @id @default(autoincrement())
  listing_id         String         @unique
  collection_address String
  token_id           Int
  price              Float
  seller_address     String
  buyer_address      String?
  status             LISTING_STATUS @default(ACTIVE)
  listed_at          DateTime
  sold_at            DateTime?
  created_at         DateTime       @default(now())
  updated_at         DateTime       @updatedAt
  offers             Offer[]
  seller             Account        @relation(name: "Seller", fields: [seller_address], references: [address])
  buyer              Account?       @relation(name: "Buyer", fields: [buyer_address], references: [address])
  collection         Collection     @relation(fields: [collection_address], references: [address])
}

enum OFFER_STATUS {
  PENDING
  ACCEPTED
  REJECTED
}

model Offer {
  id            Int          @id @default(autoincrement())
  listing_id    String       @unique
  request_from  String
  request_price Float
  status        OFFER_STATUS @default(PENDING)
  requested_at  DateTime
  accepted_at   DateTime?
  rejected_at   DateTime?
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  listing       Listing      @relation(fields: [listing_id], references: [listing_id])
  requester     Account      @relation(fields: [request_from], references: [address])
}

model Account {
  id               Int       @id @default(autoincrement())
  address          String    @unique
  signature        String    @unique
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  offers           Offer[]
  karts            Kart[]
  assets           Asset[]
  listingsAsBuyer  Listing[] @relation(name: "Buyer")
  listingsAsSeller Listing[] @relation(name: "Seller")
}

model Image {
  id              Int              @id @default(autoincrement())
  image_url       String
  animation_url   String
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
  imageAttributes ImageAttribute[]
}

model ImageAttribute {
  id           Int      @id @default(autoincrement())
  image_id     Int
  trait_type   String
  value        String
  display_type String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  image        Image    @relation(fields: [image_id], references: [id])
}
